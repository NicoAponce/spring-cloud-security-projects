package com.example.demo.controllers;import ms.pe.common.models.entity.Product;import com.example.demo.models.service.IProductService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.core.env.Environment;import org.springframework.http.HttpStatus;import org.springframework.web.bind.annotation.*;import java.util.List;import java.util.stream.Collectors;@RestControllerpublic class ProductController {    @Autowired    private Environment env;    @Autowired    private IProductService productService;    @Value("${server.port}")    private Integer port;    @GetMapping("/select")    public List<Product> select() {        return productService.findAll().stream().map(product -> {            // product.setPort(Integer.parseInt(env.getProperty("local.server.port") ));            product.setPort(port);            return product;        }).collect(Collectors.toList());    }    @GetMapping("/select/{id}")    public Product get(@PathVariable Long id) {        Product product = productService.findById(id);        product.setPort(Integer.parseInt(env.getProperty("local.server.port")));        return product;    }    @PostMapping("/add")    @ResponseStatus(HttpStatus.CREATED)    public Product save(@RequestBody Product product) {        return productService.save(product);    }    @PutMapping("/edit/{id}")    @ResponseStatus(HttpStatus.CREATED)    public Product update(@RequestBody Product product, @PathVariable Long id) {        Product dbProduct = productService.findById(id);        dbProduct.setName(product.getName());        dbProduct.setPrice(product.getPrice());        return productService.save(dbProduct);    }    @DeleteMapping("/delete/{id}")    @ResponseStatus(HttpStatus.NO_CONTENT)    public void delete(@PathVariable Long id) {        productService.deleteById(id);    }}