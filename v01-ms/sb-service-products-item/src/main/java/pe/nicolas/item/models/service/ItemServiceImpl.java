package pe.nicolas.item.models.service;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpEntity;import org.springframework.http.HttpMethod;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;import pe.nicolas.item.models.Item;import pe.nicolas.item.models.Product;import java.util.Arrays;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.stream.Collectors;@Service("serviceRestTemplate")public class ItemServiceImpl implements ItemService {    @Autowired    private RestTemplate clientRest;    @Override    public List<Item> findAll() {        List<Product> products = Arrays.asList(clientRest.getForObject("http://products-service/select", Product[].class));        return products.stream().map(product -> new Item(product, 1)).collect(Collectors.toList());    }    @Override    public Item findById(Long id, Integer quantity) {        Map<String, String> path = new HashMap<String, String>();        path.put("id", id.toString());        Product product = clientRest.getForObject("http://products-service/select/{id}", Product.class, path);        return new Item(product, quantity);    }    @Override    public Product save(Product product) {        HttpEntity<Product> body = new HttpEntity<>(product);        ResponseEntity<Product> responseEntity = clientRest                .exchange("http://products-service/add", HttpMethod.POST, body, Product.class);        Product responseProduct = responseEntity.getBody();        return responseProduct;    }    @Override    public Product update(Product product, Long id) {        Map<String, String> path = new HashMap<String, String>();        path.put("id", id.toString());        HttpEntity<Product> body = new HttpEntity<>(product);        ResponseEntity<Product> responseEntity = clientRest                .exchange("http://products-service/edit/{id}"                        , HttpMethod.PUT, body, Product.class, path);        return responseEntity.getBody();    }    @Override    public void delete(Long id) {        Map<String, String> path = new HashMap<>();        path.put("id", id.toString());        clientRest.delete("http://products-service/delete/{id}", path);    }}